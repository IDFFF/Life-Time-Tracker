require('tracker/ltt');
var $ = require('jquery');
var isBrowser = false;
var Moment = require('moment');
var isBrowser = typeof process === 'undefined';
var evernoteSync = require('tracker/sync/evernote');
var importer = require('tracker/importer');
var searchProject = require('tracker/search/searchProject');
var searchVersion = require('tracker/search/searchVersion');
var searchTask = require('tracker/search/searchTask');


function syncNote(config) {
    if (config.type === 'evernote') {
        return evernoteSync.sync({
            start: config.start,
            end: config.end
        });
    }
}

exports.syncEvernote = function (start, end) {
    var mStart, mEnd;
    if (start && end) {
        mStart = new Moment(start);
        mEnd = new Moment(end);
    } else {
        mStart = new Moment().startOf('month');
        mEnd = new Moment().endOf('month');
    }
    start = mStart.toDate();
    end = mEnd.toDate();
    return syncNote({
        type: 'evernote',
        start: start,
        end: end
    }).then(function () {
        return importer.importFromLogFile({
            start: start,
            end: end
        });
    });
};


exports.projects = function (options) {
    return searchProject.query(options);
};

exports.importLogContent = function (date, logContent) {
    return importer.importLogContent(date, logContent);
};

exports.versions = function (options) {
    return searchVersion.query(options);
};


exports.tasks = function (options) {
    return searchTask.query(options);
};