
var mongoose = require('mongoose'),
    Schema = mongoose.Schema,
    ObjectId = Schema.ObjectId;

var Task = Schema({
    name: String,
    attributes: Object,
    children: [{type: ObjectId, ref: "Task"}],
    parent: { type: ObjectId, default: null},
    tags: Array,
    projectId: ObjectId,
    versionId: ObjectId,
    progress: {type: Number, default: -1},
    createTime: Date,
    updateTime: {type: Date, default: null},
    lastActiveTime: Date,
    type: {type: String, default: null},
    estimatedTime: Number, //estimated time that task would need
    deferUntil: Date, // task start defer  until this date
    completeTime: Date, //the time when task completed
    dueTime: Date,
    //frozen: { type: Boolean, default: false},
    marked: { type: Boolean, default: false}
});


Task.methods.complete = function (cb) {
    this.set('progress', 100);
    this.save(cb);
};

Task.methods.restart = function (cb) {
    this.set('progress', 0);
    this.save(cb);
};

Task.methods.freeze = function (cb) {
    this.set('frozen', true);
    this.save(cb);
};

module.exports = mongoose.model('Task', Task);
