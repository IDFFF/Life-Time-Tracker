var Q = require('q');
var Moment = require('moment');

var Log = require('../model/log');


var GRANULARITY_MONTH = 'month',
    GRANULARITY_YEAR = 'year',
    GRANULARITY_DAY = 'day';

/**
 * query log
 * @return {Promise}
 */
function queryLog(options) {
    var deferred = Q.defer();
    var searchConditions = getSearchConditions(options);
    var granularity = options.granularity;
    var dateProjectId;
    if (granularity === GRANULARITY_MONTH) {
        dateProjectId = {month: { $month: "$date" }, year: { $year: "$date" }};
    } else if (granularity === GRANULARITY_DAY) {
        dateProjectId = {
            month: { $month: "$date" },
            day: { $dayOfMonth: "$date" },
            year: { $year: "$date" }
        };
    } else if (granularity === GRANULARITY_YEAR) {
        dateProjectId = {year: { $year: "$date" }};
    }
    Log.aggregate()
        .match(searchConditions)
        .unwind("classes")
        .project({
            date: dateProjectId,
            classCode: "$classes",
            len: "$len"
        })
        .group({
            _id: {classCode: "$classCode", date: "$date"},
            len: {$sum: '$len'}
        })
        .group({
            _id: "$_id.classCode",
            data: {$push: {date: "$_id.date", len: "$len"}}
        })
        .project({
            _id: 0,
            class: "$_id",
            data: "$data"
        })
        .exec()
        .then(function (result) {
            deferred.resolve(result);
        }).on('reject', function (err) {
            deferred.reject(err);
        });
    return deferred.promise;
}

function getSearchConditions(options) {
    var condition = {};
    if (options.start && options.end) {
        condition =  {
            start: {
                $gte: new Moment(options.start).toDate(),
                $lt: new Moment(options.end).toDate()
            }
        };
    }
    return condition;
}


function calculate(options, data) {
    return data;
}


exports.query = function (options) {
    return queryLog(options).then(calculate.bind(null, options));
};