/**
 * export data
 */
'use strict';

var Search = require('./search/search');
var Q = require('q');
var Moment = require('moment');



exports.export = function (options) {
    var deferred = Q.defer();
    Search.query(options).then(function (logs) {
        var days = [],
            oneDayOriginLogs = [],
            logsEndIndex = logs.length - 1,
            currentDate = null,
            prevDate = null;
        //category logs into it's belong day
        logs.forEach(function (log, index) {
            var date = new Moment(log.date).format('YYYY-MM-DD');
            currentDate = date;
            if (prevDate === null) {
                oneDayOriginLogs.push(log.origin);
            } else if (currentDate === prevDate) {
                oneDayOriginLogs.push(log.origin);
            }
            //if day over, then push the data into days array
            var isDayOver = (prevDate !== null && prevDate !== currentDate ||
                index === logsEndIndex);
            if(isDayOver){
                days.push({
                    date: date,
                    content: oneDayOriginLogs.join('\n')
                });
                oneDayOriginLogs = [];
            }
            prevDate = currentDate;
        });
        deferred.resolve(days);
    });
    return deferred.promise;
};
