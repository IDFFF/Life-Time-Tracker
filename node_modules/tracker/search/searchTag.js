var Q = require('q');
var _ = require('lodash');
var extend = require('extend');
//models
var Tag = require('../model/tag');



exports.query = function (options) {
    options = extend({}, options);
    if (options.id) {
        return queryTagById(options);
    } else {
        return queryTagByConditions(options);
    }
};

function queryTagById() {

}


function queryTagByConditions(options) {
    console.log('query by options', options);
    var deferred = Q.defer();
    var conditions = {};
    if (options.name) {
        conditions.name = new RegExp(options.name);
    }
    var queryOptions = getQueryOptions(options);
    var query = Tag.find(conditions, null, queryOptions);
    query.exec(function (err, tags) {
        console.log(err, tags);
        if (err) {
            deferred.reject(err);
            return;
        }
        if (_.isEmpty(tags)) {
            deferred.resolve([]);
            return;
        }
        deferred.resolve(tags);
    });

    return deferred.promise;
}

function getQueryOptions(userOptions) {
    return _.pick(userOptions, ['limit', 'skip']);
}
